# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        l1_curr = list1
        l2_curr = list2

        if l1_curr is None:
            return  l2_curr
        elif l2_curr is None:
            return l1_curr

        if l1_curr.val <= l2_curr.val: 
            head = l1_curr
            l1_curr = l1_curr.next
        else:
            head = l2_curr
            l2_curr = l2_curr.next

        curr = head
        while l1_curr or l2_curr:
            if l1_curr is None:
                curr.next = l2_curr
                return head
            elif l2_curr is None:
                curr.next = l1_curr
                return head
            elif l1_curr.val <= l2_curr.val:
                curr.next = l1_curr
                curr = l1_curr
                l1_curr = l1_curr.next
            else:
                curr.next = l2_curr
                curr = l2_curr
                l2_curr = l2_curr.next

        return head
